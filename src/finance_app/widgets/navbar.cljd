(ns finance-app.widgets.navbar
  (:require
   ["package:persistent_bottom_nav_bar/persistent_bottom_nav_bar.dart" :as tab]
   ["package:flutter/material.dart" :as m]
   ["package:flutter/painting.dart" :as painting]
   [cljd.flutter :as f]
   [finance-app.utils.themes :as themes]
   [finance-app.utils.colors :as colors]
   [finance-app.screens.home :as home]
   [finance-app.screens.statistics :as statistics]
   [finance-app.screens.profile :as profile]
   [finance-app.states.transactions :as transactions]))

(defn- nav-item [color icon nav-fun]
  (tab/PersistentBottomNavBarItem
   .inactiveColorPrimary color
   .activeColorPrimary color
   .icon icon
   .onPressed nav-fun))

(defn bottom-nav []
  (f/widget
   :context ctx
   :let [color (if (themes/is-dark-mode ctx)
                 colors/dark-green-icon
                 colors/green-nav)]
   :managed [controller (tab/PersistentTabController .initialIndex 0)]
   (tab/PersistentTabView
    ctx
    .screens [home/screen
              profile/frozen-screen
              profile/frozen-screen]
    .items [(nav-item color (m/Icon m.Icons/home) (fn [ctx] (dart:core/print "xxx1")))
            (nav-item color (m/Icon m.Icons/insert_chart)
                      (fn [c]
                        (await (transactions/daily-sum))
                        (await (transactions/category-sum))
                        (tab.PersistentNavBarNavigator/pushNewScreen
                         ctx
                         .screen
                         (statistics/screen ctx)
                         .withNavBar false)))
            (nav-item color (m/Icon m.Icons/person) 
                      (fn [c]
                        (tab.PersistentNavBarNavigator/pushNewScreen
                         ctx
                         .screen
                         (profile/screen ctx)
                         .withNavBar false)))]
    .controller controller
    .navBarHeight 60
    .decoration
    (tab/NavBarDecoration .colorBehindNavBar
                          (if (themes/is-dark-mode ctx)
                            colors/dark-green-back
                            colors/green-dark)
                          .borderRadius
                          (.only painting/BorderRadius
                                 .topLeft (.circular painting/Radius 15)
                                 .topRight (.circular painting/Radius 15)))
    .padding (m.EdgeInsets/all 0)
    .backgroundColor (-> m/Theme (.of ctx) .-primaryColor)
    .navBarStyle (.-style13 tab/NavBarStyle)
    .animationSettings
    (tab/NavBarAnimationSettings
      .navBarItemAnimation (tab/ItemAnimationSettings
                             .duration (Duration .milliseconds 400)
                             .curve (.-ease m/Curves))
      .screenTransitionAnimation (tab/ScreenTransitionAnimationSettings
                                   .curve (.-ease m/Curves))))))

(defn ^m/Widget screen [ctx]
  (bottom-nav))