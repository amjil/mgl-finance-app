(ns finance-app.widgets.transaction-card
  (:require
   ["package:flutter/material.dart" :as m]
   ["package:mongol/mongol.dart" :as mgl]
   ["package:persistent_bottom_nav_bar/persistent_tab_view.dart" :as tab]
   [cljd.flutter :as f]
   [finance-app.states.categories :as categories]
   [finance-app.states.transactions :as transactions]
   [finance-app.states.global :as gs]
   [finance-app.screens.transaction :as transaction-screen]
   [finance-app.utils.icons :as icons]
   [finance-app.utils.util :as util]
   [finance-app.utils.colors :as colors]))

(defn card [height t]
  (f/widget
   :context context
   (m/GestureDetector 
    .onTap (fn [] (util/show-transaction
                   context t
                   (fn []
                     ;; 
                     (util/show-confirm-dialog
                      context "ᠲᠠ ᠦᠨᠡᠬᠡᠷ ᠤᠰᠠᠳᠭᠠᠬᠤ ᠤᠤ?"
                      (fn []
                        (-> m/Navigator (.of context) .pop)
                        (transactions/delete-transaction (get t "id")))))
                   (fn []
                     (-> m/Navigator (.of context) .pop)
                     (await (categories/all-categories))
                     (swap! gs/state assoc :type (get t "main_type"))
                     (swap! gs/state assoc :subtypes (categories/get-sub-types (get t "main_type")))
                     (swap! gs/state assoc :subtype (get t "types_of"))
                     (swap! gs/state assoc :cates (categories/get-cates))
                     (swap! gs/state assoc :curr-cate (get t "category_id"))
                     (tab.PersistentNavBarNavigator/pushNewScreen
                      context
                      .screen
                      (transaction-screen/edit-screen
                       context
                       (get t "id")
                       (get t "amount")
                       (get t "content")
                       (get t "category_id")
                       (get t "transaction_time"))
                      .withNavBar false)
                     nil))))
   (m/Container
    .padding (.symmetric m/EdgeInsets .vertical 10)
    .width 65
    .decoration
    (m/BoxDecoration
     .color (-> m/Theme (.of context) .-cardColor)
     .borderRadius (.circular m/BorderRadius 12)))
   (m/Column
    .crossAxisAlignment m.CrossAxisAlignment/center
    .children
    [(m/Icon (get icons/icons (get t "icon_name"))
             .color colors/green)
     (m/SizedBox .height height)
     (m/Row
      .crossAxisAlignment m.CrossAxisAlignment/start
      .mainAxisAlignment m.MainAxisAlignment/center
      .children
      [(m/Column
        .mainAxisAlignment m.MainAxisAlignment/spaceBetween
        .children
        [(mgl/MongolText (get t "category_name"))
         (mgl/MongolText
          (subs
           (get t "transaction_time") 0 10)
          .style (m/TextStyle .fontSize 12))])
       (mgl/MongolText (if (empty? (get t "content"))
                         ""
                         (get t "content"))
                       .style (m/TextStyle .fontSize 16))
       (m/SizedBox .width 2)])
     (m/Spacer)
     (mgl/MongolText
      (str
       (if (= 1 (get t "main_type"))
         "- "
         "+ ")
       (-> (get t "amount") str))
      .style (m/TextStyle
              .fontSize 18
              .fontWeight m.FontWeight/bold
              .color (if (= 1 (get t "main_type"))
                       m.Colors/red
                       m.Colors/green)))])))