(ns finance-app.states.profile
  (:require
   [finance-app.services.pref :as pref]
   [finance-app.states.global :as gs]))

(defn use-in-app-virtual-keyboard [b]
  nil)

(def profile-keys
  ;; 1 key 2 type 3 default value
  [["in-app-keyboard" :bool true]])

(defn get-profile-setting [k]
  (await
   (pref/get-value {:key (first k) :type (second k)})))

(defn set-profile-setting [k]
  ;; k => {:key "xx" :type :string/:bool/.... :value xxx}
  (await 
   (pref/set-value k))
  (swap! gs/state assoc-in [:profile (:key k)] (:value k)))
   
(defn prepopulate-profile-settings []
  (doall
   (map (fn [k]
          (let [result (await (get-profile-setting k))]
            (swap! gs/state assoc-in [:profile (first k)]
                   (if (nil? result)
                     (last k)
                     result))))
        profile-keys)))